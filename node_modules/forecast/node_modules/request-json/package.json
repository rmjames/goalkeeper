{
  "name": "request-json",
  "description": "HTTP client for very simple usages and JSON requests only",
  "keywords": [
    "requests",
    "http",
    "json",
    "client"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mycozycloud/request-json/blob/master/LICENSE"
    }
  ],
  "version": "0.3.8",
  "homepage": "https://github.com/mycozycloud/request-json/",
  "bugs": {
    "url": "https://github.com/mycozycloud/request-json/issues"
  },
  "author": {
    "name": "Cozy Cloud",
    "email": "contact@cozycloud.cc",
    "url": "http://cozycloud.cc"
  },
  "contributors": [],
  "engines": {
    "node": "*"
  },
  "main": "./main.js",
  "dependencies": {
    "request": "2.21.0"
  },
  "devDependencies": {
    "coffee-script": "*",
    "express": "*",
    "chai": "*",
    "mocha": "*"
  },
  "scripts": {
    "prepublish": "cake build",
    "test": "cake tests"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mycozycloud/request-json.git"
  },
  "optionalDependencies": {},
  "readme": "## About\n\n[Request](https://github.com/mikeal/request) is a great HTTP client for NodeJS,\nbut if you deal only with JSON, things could be more straightforward. This lib\naims to simplify Request usage for \nJSON only requests.\n\n## Install\n\nAdd it to your package.json file or run in your project folder: \n\n    npm install request-json\n\n## Build status\n\n[![Build\nStatus](https://travis-ci.org/mycozycloud/request-json.png?branch=master)](https://travis-ci.org/mycozycloud/request-json)\n\n## How it works\n\nwith Javascript:\n\n```javascript\nvar Client = require('request-json').JsonClient;\nvar client = new Client('http://localhost:8888/');\n\nvar data = {\n  title: 'my title',\n  content: 'my content'\n};\nclient.post('posts/', data, function(err, res, body) {\n  return console.log(res.statusCode);\n});\n\nclient.get('posts/', function(err, res, body) {\n  return console.log(body.rows[0].title);\n});\n\ndata = {\n  title: 'my new title'\n};\nclient.put('posts/123/', data, function(err, res, body) {\n  return console.log(response.statusCode);\n});\n\nclient.del('posts/123/', function(err, res, body) {\n  return console.log(response.statusCode);\n});\n```\n\nwith Coffeescript:\n\n```javascript\nClient = require('request-json').JsonClient\nclient = new Client 'http://localhost:8888/'\n\ndata = title: 'my title', content: 'my content'\nclient.post 'posts/', data, (err, res, body) ->\n    console.log response.statusCode\n\nclient.get 'posts/', (err, res, body) ->\n    console.log body.rows[0].title\n\ndata = title: 'my new title'\nclient.put 'posts/123/', data, (err, res, body) ->\n    console.log response.statusCode\n\nclient.del 'posts/123/', (err, res, body) ->\n    console.log response.statusCode\n```\n\n### Extra : files\n\nwith Javascript:\n\n```javascript\ndata = {\n  name: \"test\"\n};\nclient.sendFile('attachments/', './test.png', data, function(err, res, body) {\n  if (err) {\n    return console.log(err);\n  }\n});\n\nclient.saveFile('attachments/test.png', './test-get.png', function(err, res, body) {\n  if (err) {\n    return console.log(err);\n  }\n});\n\n```\n\nwith Coffeescript:\n\n```javascript\ndata = name: \"test\"\nclient.sendFile 'attachments/', './test.png', data, (err, res, body) ->\n    console.log err if err\n\nclient.saveFile 'attachments/test.png', './test-get.png', (err, res, body) ->\n    console.log err if err\n```\n\n\n\n### Extra : basic authentication\n\nwith Javascript:\n\n```javascript\nclient.setBasicAuth('john', 'secret');\nclient.get('private/posts/', function(err, res, body) {\n  return console.log(body.rows[0].title);\n});\n\n```\n\n\nwith Coffeescript:\n\n```javascript\nclient.setBasicAuth 'john', 'secret'\nclient.get 'private/posts/', (err, res, body) ->\n    console.log body.rows[0].title\n```\n",
  "readmeFilename": "README.md",
  "_id": "request-json@0.3.8",
  "dist": {
    "shasum": "169e33cad07cc4aec504b5216d43ed72795bf8cc"
  },
  "_from": "request-json@~0.3.3",
  "_resolved": "https://registry.npmjs.org/request-json/-/request-json-0.3.8.tgz"
}
